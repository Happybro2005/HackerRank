int pylons(int k, int arr_count, int* arr) {
    int i = 0;
    int count = 0;
    while (i < arr_count) {
        int plant_pos = -1;
        int start = i + k - 1;
        if (start >= arr_count) {
            start = arr_count - 1;
        }
        int end = i - k + 1;
        if (end < 0) {
            end = 0;
        }
        for (int j = start; j >= end; j--) {
            if (arr[j] == 1) {
                plant_pos = j;
                break;
            }
        }
        if (plant_pos == -1) {
            // No suitable city found to cover city i
            return -1;
        }
        count++;
        // Move i to the first city not covered by the new plant
        i = plant_pos + k;
    }

    return count;
}
