#include <iostream>
#include <string>
#include <vector>
#include <cmath>
#include <fstream>

using namespace std;

/*
 * Complete the 'substrings' function below.
 *
 * The function is expected to return an INTEGER.
 * The function accepts STRING n as parameter.
 */

int substrings(string n) {
    const long long MOD = 1000000007;
    int len = n.length();
    if (len == 0) {
        return 0;
    } long long current_dp_sum = 0;
    long long total_sum = 0;

    for (int i = 0; i < len; ++i) {
        long long digit_value = n[i] - '0';
        long long term1 = (current_dp_sum * 10) % MOD;
         long long count = i + 1;
        long long term2 = (count * digit_value) % MOD;
        current_dp_sum = (term1 + term2) % MOD;
        total_sum = (total_sum + current_dp_sum) % MOD;
    }

    return (int)total_sum;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    string n;
    getline(cin, n);

    int result = substrings(n);

    fout << result << "\n";

    fout.close();

    return 0;
}
