  char* plaintext = (char*)malloc(strlen(s) + 1);
    int j = 0;
    for (int i = 0; s[i] != '\0'; i++) {
        if (s[i] != ' ') {
            plaintext[j++] = s[i];
        }
    }
    plaintext[j] = '\0';

    int L = strlen(plaintext);

    // 2. Calculate grid dimensions
    int rows = floor(sqrt(L));
    int cols = ceil(sqrt(L));

    if (rows * cols < L) {
        rows++;
    }

    // 3. Encrypt the message
    char* encrypted_text = (char*)malloc(L + cols + 1);
    int k = 0;

    for (int i = 0; i < cols; i++) {
        for (int row = 0; row < rows; row++) {
            int index = row * cols + i;
            if (index < L) {
                encrypted_text[k++] = plaintext[index];
            }
        }
        if (i < cols - 1) {
            encrypted_text[k++] = ' ';
        }
    }
    encrypted_text[k] = '\0';

    free(plaintext);
    return encrypted_text;
}

int main()
{
    FILE* fptr = fopen(getenv("OUTPUT_PATH"), "w");

    char* s = readline();

    char* result = encryption(s);

    fprintf(fptr, "%s\n", result);

    fclose(fptr);

    return 0;
}
